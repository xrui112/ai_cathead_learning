根据如描述说明，帮我编写一款简单的AI对话页面。
        1. 请编写html、js、tailwindcss UI 效果。不要写react、vue。
        2. 点击新建聊天，会创建一个新的加入左侧的聊天列表
        3. 聊天列表可以点击展开选择。
        4. 选择的聊天，在对话列表中，可以点击删除或者重命名。
        5. 输入内容，点击发送按钮和使用快捷键，调用服务端流式请求接口，前端渲染展示。
        6. 以html、js代码方式实现，css样式使用 tailwind 编写。
        7. 通过 const eventSource = new EventSource(apiUrl); 调用api接口。
        8. 从 result.output.content 获取，应答的文本展示。注意 content 可能为空。
        9. 从 result.metadata.finishReason = STOP 获取，结束标识。
        10. 注意整体样式的简洁美观。

        接口信息如下

        流式GET请求接口，由 SpringBoot Spring AI 框架实现，如下；

/**
 * curl http://localhost:8090/api/v1/ollama/generate_stream?model=deepseek-r1:1.5b&message=1+1
 */
@RequestMapping(value = "generate_stream", method = RequestMethod.GET)
@Override
public Flux<ChatResponse> generateStream(@RequestParam String model, @RequestParam String message) {
        return chatClient.stream(new Prompt(
        message,
        OllamaOptions.create()
        .withModel(model)
        ));
        }

        流式GET应答数据，数组中的一条对象；

        [
        {
        "result": {
        "output": {
        "messageType": "ASSISTANT",
        "properties": {
        "id": "chatcmpl-B3HPw95SsqmhoWeJ8azGLxK1Vf4At",
        "role": "ASSISTANT",
        "finishReason": ""
        },
        "content": "1",
        "media": []
        },
        "metadata": {
        "finishReason": null,
        "contentFilterMetadata": null
        }
        }
        }
        ]
